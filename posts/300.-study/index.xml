<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>300. Study on 양성연의 블로그</title><link>https://kubesy.com/posts/300.-study/</link><description>Recent content in 300. Study on 양성연의 블로그</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 02 Jan 2025 23:11:20 +0900</lastBuildDate><atom:link href="https://kubesy.com/posts/300.-study/index.xml" rel="self" type="application/rss+xml"/><item><title>Hello, k8s Dev World!</title><link>https://kubesy.com/posts/300.-study/301.-kubernetes-deep-dive/hello-k8s-dev-world/</link><pubDate>Thu, 02 Jan 2025 23:11:20 +0900</pubDate><guid>https://kubesy.com/posts/300.-study/301.-kubernetes-deep-dive/hello-k8s-dev-world/</guid><description>&lt;p>&lt;a href="https://github.com/kubernetes/kubernetes" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes&lt;/a>&lt;/p>
&lt;h3 id="쿠버네티스-딥-다이브를-시도하는-이유">쿠버네티스 딥 다이브를 시도하는 이유&lt;/h3>
&lt;p>시중에 쿠버네티스(이하 K8s)를 엔지니어 관점에서 활용하는 예시는 무궁무진하다. 배포, 모니터링, 유지 관리 등등 .
특히 K8s 클러스터를 배포하는 것은 kubeadm, kubespray, k3s, k0s, kind, minikube 등등 엄청나게 방법이 다양하다.&lt;/p>
&lt;p>하지만 K8s를 개발의 관점에서 접근하는 경우는 드물다. 당장 &lt;code>k8s 개발 환경 구축&lt;/code> 키워드로 검색해보아도, 대부분 엔지니어 관점에서의 게시글이다.&lt;/p>
&lt;p>잘 만들어졌거나, 충분히 완성도가 높을 것이라 기대되는 K8s를 굳이 빌드해보는 이유는 무엇일까? 이에 대한 나의 선제적 답은 엔지니어와 개발자 두 가지 관점으로 있다.&lt;/p></description></item><item><title>1. 개념 및 환경 구축 그리고 간단한 구동</title><link>https://kubesy.com/posts/300.-study/303.-java-spring-boot-/1.-%EA%B0%9C%EB%85%90-%EB%B0%8F-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EA%B5%AC%EB%8F%99/</link><pubDate>Tue, 24 Dec 2024 23:42:23 +0900</pubDate><guid>https://kubesy.com/posts/300.-study/303.-java-spring-boot-/1.-%EA%B0%9C%EB%85%90-%EB%B0%8F-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EA%B0%84%EB%8B%A8%ED%95%9C-%EA%B5%AC%EB%8F%99/</guid><description>&lt;h3 id="들어가기-앞서-">들어가기 앞서 &amp;hellip;&lt;/font>&lt;/h3>
&lt;p>저는 비전공자 출신이고, 이제 곧 만 3년의 경력을 채우는 클라우드 도메인 쪽 개발자 입니다. ( 사실 개발자와 DevOps 엔지니어 그 어딘가에 걸쳐 있다고 생각하긴 하는데 &amp;hellip; )&lt;/p>
&lt;p>현재 제 주력 언어는, go와 python 인데요. 예전부터 java spring을 그래도 한 번은 경험 해봐야겠다는 생각을 가지고 있었습니다. (한국에서 백엔드는 자바 밖에 안 뽑아요 &amp;hellip;)&lt;/p>
&lt;p>그러다보니 &lt;code>스프링 부트 핵심 가이드&lt;/code> 라는 책을 이전에 사놓고 방치해두고 있었다가, 연말 휴가를 맞이하여 한 번 도전해봐야겠다는 생각이 들었습니다.&lt;/p></description></item></channel></rss>